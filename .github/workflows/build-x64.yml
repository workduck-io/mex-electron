name: Build and Release on x86_64
on:
  push:
    branches:
      - mukul-wd-619-task-add-cicd-to-mex-electron
  # release:
  #   types:
  #     - created

jobs:
  # publish_on_linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@master
  #       with:
  #         node-version: 14
  #     - name: install dependencies
  #       run: npm install
  #     - name: publish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npm run publish

  publish_on_mac:
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
      YARN_TOKEN: ${{ secrets.YARN_TOKEN }}
      CERTIFICATE_OSX_P12: ${{ secrets.CERTIFICATE_OSX_P12 }}
      CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: "16.x"
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn
      - name: Add certificates to keychain
        run: chmod +x build/osx-add-cert.sh && build/osx-add-cert.sh
      - name: Rebuild Native Dependencies
        run: ./node_modules/.bin/electron-rebuild
      - name: Build App
        env:
          GITHUB_TOKEN: ${{ github.token }}
          YARN_TOKEN: ${{ secrets.YARN_TOKEN }}
          CERTIFICATE_OSX_P12: ${{ secrets.CERTIFICATE_OSX_P12 }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        run: APPLE_ID="tech@workduck.io" APPLE_ID_PASSWORD="team-apple-id-password" yarn make
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release Mex ${{ github.ref }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./out/make/Mex-0.1.0-x64.dmg
          asset_name: Mex-0.1.0-x64.dmg
          asset_content_type: application/octet-stream
  # publish_on_win:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@master
  #       with:
  #         node-version: 14
  #     - name: install dependencies
  #       run: npm install
  #     - name: publish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npm run publish
